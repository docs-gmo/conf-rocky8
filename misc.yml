---
#  - name: verify if IPV6 is activ
#    stat: path=/proc/sys/net/ipv6/conf/all/disable_ipv6
#    register: ipv6
#
#  - name: unactive ipv6 (1/2)
#    ansible.posix.sysctl:
#      name: net.ipv6.conf.all.disable_ipv6
#      value: 1
#      sysctl_set: yes
#      state: present
#      reload: yes
#    when: ipv6.stat.exists == True
#  
#  - name: unactive ipv6 (2/2) 
#    ansible.posix.sysctl:
#      name: net.ipv6.conf.default.disable_ipv6
#      value: 1
#      sysctl_set: yes
#      state: present
#      reload: yes
#    when: ipv6.stat.exists == True
#  
#  - name: secure stack ip part 1
#    ansible.posix.sysctl:
#      name: net.ipv4.tcp_timestamps
#      value: "0"
#      sysctl_set: yes
#      state: present
#      reload: yes
#  
#  - name: secure stack ip part 2
#    firewalld:
#      service: dhcpv6-client
#      permanent: true
#      state: disabled
#  
#  - name: unactive ipv6 sshd
#    lineinfile:
#      dest: /etc/ssh/sshd_config
#      insertafter: '^#ListenAddress 0.0.0.0'
#      line: 'ListenAddress 0.0.0.0'
  
#  - name: unactivate CRTL-ALT-DEL
#    file:
#      src: /dev/null
#      dest: /usr/lib/systemd/system/ctrl-alt-del.target
#      state: link
#    changed_when: false

  - name: limit the number of kernels installed on the server 
    replace:
      path: /etc/yum.conf
      regexp: '^installonly_limit=5'
      replace: 'installonly_limit=2'
  
  - name: root prompt bashrc
    lineinfile:
      path: /root/.bashrc
      insertafter: EOF
      line: 'export PS1="\[\033[0;32m\][\[\033[0;31m\]\u\[\033[0;31m\]@\h \[\033[0;32m\]\W]# \[\033[0;37m\]"'
  
  - name: root prompt user
    lineinfile:
      path: "/home/{{ ansible_user_id }}/.bashrc"
      insertafter: EOF
      line: 'export PS1="\[\033[0;32m\][\[\033[1;94m\]\u\[\033[0;33m\]@\h \[\033[0;32m\]\W]# \[\033[0;37m\]"'

      
#  - name: vimrc
#    template:
#      src: os/vimrc
#      dest: /root/.vimrc
#
#  - name: get os name from /etc/redhat/redhat-release
#    shell: cat /etc/redhat-release  
#    register: os_name
#
#  - name: debug
#    debug:
#      var: os_name 
#
#  - name: Issue (gmolab)
#    template:
#      src: os/gmolab
#      dest: /etc/issue
#    when:
#      - ansible_domain == "gmolab.net"
#    become: true
#  
#  - name: Issue.net (gmolab)
#    template: 
#      src: os/gmolab.net
#      dest: /etc/issue.net
#    when:
#      - ansible_domain == "gmolab.net"
#    become: true
#
#  - name: Issue (gmotech)
#    template:
#      src: os/gmotech
#      dest: /etc/issue
#    when:
#      - ansible_domain == "gmotech.dyndns.org" or ansible_domain == "gmotech.net"
#    become: true
#  
#  - name: Issue.net (gmotech)
#    template: 
#      src: os/gmotech.net
#      dest: /etc/issue.net
#    when:
#      - ansible_domain == "gmotech.dyndns.org" or ansible_domain == "gmotech.net"
#    become: true
#
#  - name: Add sshd banner option
#    lineinfile:
#      dest: /etc/ssh/sshd_config
#      insertafter: '^#Banner none'
#      line: 'Banner /etc/issue.net' 
#    become: true
#
#  - name: Install CA GMOLab
#    copy:
#      src: "cacerts/{{ item }}"
#      dest: "/etc/pki/ca-trust/source/anchors/{{ item }}"
#    with_items:
#      - gmolab.crt
#    when:
#      - ansible_domain == "gmolab.net"
#    become: true
#
#  - name: Install CA GMOTech
#    copy:
#      src: "cacerts/{{ item }}"
#      dest: "/etc/pki/ca-trust/source/anchors/{{ item }}"
#    with_items:
#      - gmotech.crt
#    when:
#      - ansible_domain == "gmotech.dyndns.org" or ansible_domain == "gmotech.net"
#    become: true
#
#  - name: Trust CA
#    shell: update-ca-trust
#    changed_when: false
#    become: true
#
#  - name: Create message in motd
#    copy:
#      content: "\n**************************************************\n*    !! This
#server is managed by ANSIBLE !!     *\n* The config files must be changed in repository *\n**************************************************\n\n"
#      dest: /etc/motd
#    become: true
